apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

publishing {
	publications {
		mavenStuff(MavenPublication) {
			from components.java

			artifact sourcesJar {
				classifier "sources"
			}

			artifact javadocJar {
				classifier "javadoc"
			}
		}
	}
}

if (project.hasProperty('awsAccessKey') && project.hasProperty('awsSecretKey')) {
	uploadArchives {
		repositories {
			mavenDeployer {
				def awsCredentials = [
					userName: awsAccessKey,
					passphrase: awsSecretKey
				]
	
				configuration = configurations.deployerJars
				repository(url: "s3://public-maven.classmethod.info/release") {
					authentication(awsCredentials)
				}
				snapshotRepository(url: "s3://public-maven.classmethod.info/snapshot") {
					authentication(awsCredentials)
				}
			}
		}
	}
	
	[install.repositories.mavenInstaller, uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
		pom.project {
			inceptionYear '2013'
			packaging 'jar'
			licenses {
				license {
					name 'The Apache Software License, Version 2.0'
					url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					distribution 'repo'
				}
			}
		}
	}
}


if (project.hasProperty('bintrayUser') && project.hasProperty('bintrayApiKey')) {
	bintray {
		user = bintrayUser
		key = bintrayApiKey
	
		publications = ['mavenStuff']
		pkg {
			repo = 'maven'
			name = "gradle-aws-plugin"
			desc = 'Gradle plugin to manage AWS resources'
			userOrg = 'classmethod'
			websiteUrl = 'https://github.com/nls-omaksimovich/gradle-aws-plugin'
			issueTrackerUrl = 'https://github.com/nls-omaksimovich/gradle-aws-plugin/issues'
			vcsUrl = 'https://github.com/nls-omaksimovich/gradle-aws-plugin.git'
			licenses = ['Apache-2.0']
			labels = ['AWS', 'Gradle']
		}
	}
}

group = project.group
artifactId = project.artifactId
version = project.version

pluginBundle {
	website = 'https://github.com/nls-omaksimovich/gradle-aws-plugin'
	vcsUrl = 'https://github.com/nls-omaksimovich/gradle-aws-plugin'
	description = 'Gradle plugin to manage AWS resources'
	tags = ['AWS']
}


gradlePlugin {
	description = 'Gradle plugin to manage Amazon Web Services'

	plugins {
		awsPlugin {
			id = 'fork.jp.classmethod.aws'
			displayName = 'Gradle AWS plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.AwsPlugin'
		}
		awsBeanstalkPlugin {
			id = 'fork.jp.classmethod.aws.beanstalk'
			displayName = 'Gradle AWS Elastic Beanstalk plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.elasticbeanstalk.AwsBeanstalkPlugin'
		}
		awsCloudFormationPlugin {
			id = 'fork.jp.classmethod.aws.cloudformation'
			displayName = 'Gradle AWS CloudFormation plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.cloudformation.AmazonCloudFormationPlugin'
		}
		awsCloudWatchPlugin {
			id = 'fork.jp.classmethod.aws.cloudwatch'
			displayName = 'Gradle Amazon CloudWatch plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.cloudwatch.AwsCloudWatchPlugin'
		}
		awsECRPlugin {
			id = 'fork.jp.classmethod.aws.ecr'
			displayName = 'Gradle Amazon ECR plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.ecr.AmazonECRPlugin'
		}
		awsEC2Plugin {
			id = 'fork.jp.classmethod.aws.ec2'
			displayName = 'Gradle Amazon EC2 plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.ec2.AmazonEC2Plugin'
		}
		awsELBPlugin {
			id = 'fork.jp.classmethod.aws.elb'
			displayName = 'Gradle Amazon Elastic Load Balancing plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.elasticloadbalancing.AmazonElasticLoadBalancingPlugin'
		}
		awsIAMPlugin {
			id = 'fork.jp.classmethod.aws.iam'
			displayName = 'Gradle AWS Identity and Access Management plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.identitymanagement.AmazonIdentityManagementPlugin'
		}
		awsLambdaPlugin {
			id = 'fork.jp.classmethod.aws.lambda'
			displayName = 'Gradle AWS Lambda plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.lambda.AWSLambdaPlugin'
		}
		awsRDSPlugin {
			id = 'fork.jp.classmethod.aws.rds'
			displayName = 'Gradle Amazon RDS plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.rds.AmazonRDSPlugin'
		}
		awsRoute53Plugin {
			id = 'fork.jp.classmethod.aws.route53'
			displayName = 'Gradle Amazon Route53 plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.route53.AmazonRoute53Plugin'
		}
		awsS3Plugin {
			id = 'fork.jp.classmethod.aws.s3'
			displayName = 'Gradle Amazon S3 plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.s3.AmazonS3Plugin'
		}
		awsSSMPlugin {
			id = 'fork.jp.classmethod.aws.ssm'
			displayName = 'Gradle Amazon SSM plugin'
			implementationClass = 'fork.jp.classmethod.aws.gradle.ssm.AmazonSSMPlugin'
		}
	}
}
